{"version":3,"sources":["webpack:///./src/components/brainGrid.js","webpack:///./src/pages/brain.js"],"names":["BrainGrid","render","data","this","props","brains","imgs","className","map","node","title","frontmatter","fields","slug","style","textDecoration","to","key","img","name","src","publicURL","alt","id","React","Component","Brain","allMarkdownRemark","edges","allFile","keywords","pageQuery"],"mappings":"+KAiCeA,E,gLA7BXC,OAAA,WACI,IAAMC,EAAOC,KAAKC,MACZC,EAASH,EAAKG,OACdC,EAAOJ,EAAKI,KAElB,OACI,yBAAKC,UAAU,YACVF,EAAOG,KAAI,YAAa,IAAXC,EAAU,EAAVA,KACJC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACI,kBAAC,OAAD,CAAMC,MAAO,CAAEC,eAAe,QAAWC,GAAIP,EAAKG,OAAOC,KAAMN,UAAU,YAAYU,IAAKP,GACtF,6BACI,wBAAIH,UAAU,kBAAkBG,GAChC,uBAAGH,UAAU,gBACZD,EAAKE,KAAI,SAAAU,GACN,OAAIA,EAAIT,KAAKU,OAAST,EACX,yBAAKU,IAAKF,EAAIT,KAAKY,UAAWC,IAAKZ,EAAOO,IAAKC,EAAIT,KAAKc,KACtD,c,GAnBzBC,IAAMC,W,0DCKxBC,E,gLACFzB,OAAA,WAAU,IACEC,EAASC,KAAKC,MAAdF,KACFG,EAASH,EAAKyB,kBAAkBC,MAChCtB,EAAOJ,EAAK2B,QAAQD,MAE1B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACElB,MAAM,qBACNoB,SAAU,CAAC,OAAD,iCAEZ,kBAAC,EAAD,CAAYzB,OAAQA,EAAQC,KAAMA,M,GAZ9BkB,IAAMC,WAuBbM,GAHEL,YAGO","file":"component---src-pages-brain-js-78b7d6530ec9e1d6ba7f.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass BrainGrid extends React.Component {\n    render() {\n        const data = this.props\n        const brains = data.brains\n        const imgs = data.imgs\n\n        return(\n            <div className=\"cardGrid\">\n                {brains.map(({node}) => {\n                    const title = node.frontmatter.title || node.fields.slug;\n\n                    return(\n                        <Link style={{ textDecoration: `none` }} to={node.fields.slug} className=\"brainCard\" key={title}>\n                            <div>\n                                <h3 className=\"cardBrainTitle\">{title}</h3>\n                                <p className=\"cardBrainImg\">\n                                {imgs.map(img => {\n                                    if (img.node.name === title) {\n                                        return(<img src={img.node.publicURL} alt={title} key={img.node.id} />)\n                                    }else{return \"\"}\n                                })}\n                                </p>\n                            </div>\n                        </Link>\n                    )\n                })}\n            </div>\n        )\n    }\n}\nexport default BrainGrid;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport './main.css';\n\nimport Layout from \"../components/layout\"\nimport BrainsGrid from \"../components/brainGrid\"\nimport SEO from \"../components/seo\"\n\nclass Brain extends React.Component {\n    render() {\n        const { data } = this.props\n        const brains = data.allMarkdownRemark.edges\n        const imgs = data.allFile.edges\n\n        return (\n            <Layout>\n                <SEO\n                  title=\"Gian Winckler page\"\n                  keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n                />\n                <BrainsGrid brains={brains} imgs={imgs} />\n            </Layout>\n\n        )\n     }\n}\n\n\nexport default Brain\n\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allFile(filter: {extension: {eq: \"png\"}}) {\n          edges {\n            node {\n              id,\n              publicURL\n              name\n            }\n          }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter:  { fileAbsolutePath: { glob: \"**/brain/**/*.md\" } }\n            ) {\n            edges{\n                node{\n                    excerpt\n                    fields {\n                        slug\n                    }\n                     frontmatter {\n                        title\n                        description\n                        date(formatString: \"MMMM DD, YYYY\")\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}