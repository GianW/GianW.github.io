{"version":3,"sources":["webpack:///./src/components/brainGrid.js","webpack:///./src/pages/brain.js"],"names":["BrainGrid","render","data","this","props","brains","imgs","className","map","node","title","frontmatter","fields","slug","style","textDecoration","to","key","img","name","src","publicURL","alt","id","React","Component","Brain","allMarkdownRemark","edges","allFile","keywords","pageQuery"],"mappings":"+KAiCeA,E,gLA7BXC,OAAA,WACI,IAAMC,EAAOC,KAAKC,MACZC,EAASH,EAAKG,OACdC,EAAOJ,EAAKI,KAElB,OACI,yBAAKC,UAAU,YACVF,EAAOG,KAAI,YAAa,IAAXC,EAAU,EAAVA,KACJC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACI,kBAAC,OAAD,CAAMC,MAAO,CAAEC,eAAe,QAAWC,GAAIP,EAAKG,OAAOC,KAAMN,UAAU,YAAYU,IAAKP,GACtF,6BACI,wBAAIH,UAAU,kBAAkBG,GAChC,uBAAGH,UAAU,gBACZD,EAAKE,KAAI,SAAAU,GACN,OAAIA,EAAIT,KAAKU,OAAST,EACX,yBAAKU,IAAKF,EAAIT,KAAKY,UAAWC,IAAKZ,EAAOO,IAAKC,EAAIT,KAAKc,KACtD,c,GAnBzBC,IAAMC,W,0DCKxBC,E,gLACFzB,OAAA,WAAU,IACEC,EAASC,KAAKC,MAAdF,KACFG,EAASH,EAAKyB,kBAAkBC,MAChCtB,EAAOJ,EAAK2B,QAAQD,MAE1B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACElB,MAAM,qBACNoB,SAAU,CAAC,OAAD,iCAEZ,kBAAC,EAAD,CAAYzB,OAAQA,EAAQC,KAAMA,M,GAZ9BkB,IAAMC,WAuBbM,GAHEL,YAGO","file":"component---src-pages-brain-js-78b7d6530ec9e1d6ba7f.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nclass BrainGrid extends React.Component {\r\n    render() {\r\n        const data = this.props\r\n        const brains = data.brains\r\n        const imgs = data.imgs\r\n\r\n        return(\r\n            <div className=\"cardGrid\">\r\n                {brains.map(({node}) => {\r\n                    const title = node.frontmatter.title || node.fields.slug;\r\n\r\n                    return(\r\n                        <Link style={{ textDecoration: `none` }} to={node.fields.slug} className=\"brainCard\" key={title}>\r\n                            <div>\r\n                                <h3 className=\"cardBrainTitle\">{title}</h3>\r\n                                <p className=\"cardBrainImg\">\r\n                                {imgs.map(img => {\r\n                                    if (img.node.name === title) {\r\n                                        return(<img src={img.node.publicURL} alt={title} key={img.node.id} />)\r\n                                    }else{return \"\"}\r\n                                })}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BrainGrid;","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport './main.css';\r\n\r\nimport Layout from \"../components/layout\"\r\nimport BrainsGrid from \"../components/brainGrid\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass Brain extends React.Component {\r\n    render() {\r\n        const { data } = this.props\r\n        const brains = data.allMarkdownRemark.edges\r\n        const imgs = data.allFile.edges\r\n\r\n        return (\r\n            <Layout>\r\n                <SEO\r\n                  title=\"Gian Winckler page\"\r\n                  keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n                />\r\n                <BrainsGrid brains={brains} imgs={imgs} />\r\n            </Layout>\r\n\r\n        )\r\n     }\r\n}\r\n\r\n\r\nexport default Brain\r\n\r\n\r\nexport const pageQuery = graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n            }\r\n        }\r\n        allFile(filter: {extension: {eq: \"png\"}}) {\r\n          edges {\r\n            node {\r\n              id,\r\n              publicURL\r\n              name\r\n            }\r\n          }\r\n        }\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            filter:  { fileAbsolutePath: { glob: \"**/brain/**/*.md\" } }\r\n            ) {\r\n            edges{\r\n                node{\r\n                    excerpt\r\n                    fields {\r\n                        slug\r\n                    }\r\n                     frontmatter {\r\n                        title\r\n                        description\r\n                        date(formatString: \"MMMM DD, YYYY\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`"],"sourceRoot":""}