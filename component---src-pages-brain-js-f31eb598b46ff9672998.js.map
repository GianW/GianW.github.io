{"version":3,"sources":["webpack:///./src/components/brainGrid.js","webpack:///./src/pages/brain.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BrainGrid","render","data","this","props","brains","imgs","react_default","a","createElement","className","map","_ref","node","title","frontmatter","fields","slug","gatsby_browser_entry","style","textDecoration","to","key","img","name","src","publicURL","alt","id","React","Component","Brain","allMarkdownRemark","edges","allFile","layout","seo","keywords","brainGrid","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","barControl","winScroll","document","body","scrollTop","documentElement","height","scrollHeight","clientHeight","scrolled","getElementById","width","getElementsByClassName","display","componentDidMount","_this2","window","onscroll","menuLinks","site","siteMetadata","padding","margin","float","color","type","menu","link","header","header_Header","_3401424843","Layout","Helmet","SEO","description","image","article","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","_ref2","_ref2$site$siteMetada","siteUrl","author","twitter","avatar","url","twitterUsername","react_helmet__WEBPACK_IMPORTED_MODULE_2__","itemprop","content","property","length","join","_public_static_d_581140094_json__WEBPACK_IMPORTED_MODULE_0__","bool","defaultProps"],"mappings":"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","file":"component---src-pages-brain-js-f31eb598b46ff9672998.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nclass BrainGrid extends React.Component {\r\n    render() {\r\n        const data = this.props\r\n        const brains = data.brains\r\n        const imgs = data.imgs\r\n\r\n        return(\r\n            <div className=\"cardGrid\">\r\n                {brains.map(({node}) => {\r\n                    const title = node.frontmatter.title || node.fields.slug;\r\n\r\n                    return(\r\n                        <Link style={{ textDecoration: `none` }} to={node.fields.slug} className=\"brainCard\" key={title}>\r\n                            <div>\r\n                                <h3 className=\"cardBrainTitle\">{title}</h3>\r\n                                <p className=\"cardBrainImg\">\r\n                                {imgs.map(img => {\r\n                                    if (img.node.name === title) {\r\n                                        return(<img src={img.node.publicURL} alt={title} key={img.node.id} />)\r\n                                    }else{return \"\"}\r\n                                })}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BrainGrid;","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport './main.css';\r\n\r\nimport Layout from \"../components/layout\"\r\nimport BrainsGrid from \"../components/brainGrid\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass Brain extends React.Component {\r\n    render() {\r\n        const { data } = this.props\r\n        const brains = data.allMarkdownRemark.edges\r\n        const imgs = data.allFile.edges\r\n\r\n        return (\r\n            <Layout>\r\n                <SEO\r\n                  title=\"Gian Winckler page\"\r\n                  keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n                />\r\n                <BrainsGrid brains={brains} imgs={imgs} />\r\n            </Layout>\r\n\r\n        )\r\n     }\r\n}\r\n\r\n\r\nexport default Brain\r\n\r\n\r\nexport const pageQuery = graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n            }\r\n        }\r\n        allFile(filter: {extension: {eq: \"png\"}}) {\r\n          edges {\r\n            node {\r\n              id,\r\n              publicURL\r\n              name\r\n            }\r\n          }\r\n        }\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            filter:  { fileAbsolutePath: { glob: \"**/brain/**/*.md\" } }\r\n            ) {\r\n            edges{\r\n                node{\r\n                    excerpt\r\n                    fields {\r\n                        slug\r\n                    }\r\n                     frontmatter {\r\n                        title\r\n                        description\r\n                        date(formatString: \"MMMM DD, YYYY\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport {  StaticQuery, graphql } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\n\r\nclass Header extends React.Component {\r\n\r\n  barControl = () => {\r\n    let winScroll = document.body.scrollTop || document.documentElement.scrollTop;\r\n    let height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\r\n    let scrolled = (winScroll / height) * 100;\r\n    document.getElementById(\"myBar\").style.width = scrolled + \"%\";\r\n\r\n    if(height === 0){\r\n      document.getElementsByClassName(\"progress-container\")[0].style.display = \"none\";\r\n    }else{\r\n      document.getElementsByClassName(\"progress-container\")[0].style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.onscroll = () => { this.barControl() };\r\n    this.barControl();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data } = this.props\r\n    const menuLinks = data.site.siteMetadata.menuLinks\r\n\r\n    return (\r\n      <header>\r\n        <div\r\n          style={{\r\n            // margin: `0 auto`,\r\n            //maxWidth: 1200,\r\n            padding: `1.0rem 1.0875rem`,\r\n          }}\r\n        >\r\n          <h2 style={{ margin: 0, float: `right` }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{color: `white`, textDecoration: `none`}}\r\n            >\r\n              Gian Winckler\r\n            </Link>\r\n          </h2>\r\n          <div id=\"menuToggle\">\r\n            <input type=\"checkbox\" />\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n\r\n            <ul id=\"menu\">\r\n              {menuLinks.map(menu => {\r\n                return (<Link key={menu.name} to={menu.link}><li> {menu.name}</li></Link>)\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"progress-container\">\r\n          <div className=\"progress-bar\" id=\"myBar\"></div>\r\n        </div>\r\n      </header>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            menuLinks {\r\n              name\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Header data={data} {...props} />}\r\n  />\r\n)\r\n\r\n","import React from \"react\"\r\nimport Header from \"./header\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nfunction Layout( props ) {\r\n    const {children} = props\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Gian Winckler</title>\r\n            </Helmet>\r\n            <Header/>\r\n            <main>{children}</main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = ({ title, description, keywords, image, pathname, article }) => (\r\n  <StaticQuery\r\n    query={query}\r\n    render={({\r\n      site: {\r\n        siteMetadata: {\r\n          title,\r\n          author,\r\n          siteUrl,\r\n          twitter,\r\n          avatar\r\n        }\r\n      }\r\n    }) => {\r\n\r\n      const seo = {\r\n        title: title || \"Gian Winckler\",\r\n        description: description || \"Software engineer\",\r\n        url: `${siteUrl}${pathname || '/'}`,\r\n        twitterUsername: twitter || \"gianwinckler\",\r\n        image: avatar || \"\"\r\n      }\r\n\r\n      return (\r\n          <Helmet>\r\n            <meta itemprop=\"name\" content={seo.title} />\r\n            <meta name=\"description\" content={seo.description} />\r\n            <meta name=\"image\" content={seo.image} />\r\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n            {(article ? true : null) && (\r\n              <meta property=\"og:type\" content=\"article\" />\r\n            )}\r\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta property=\"og:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            {seo.twitterUsername && (\r\n              <meta name=\"twitter:creator\" content={seo.twitterUsername} />\r\n            )}\r\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta name=\"twitter:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n\r\n            {keywords && keywords.length > 0 && (\r\n              <meta name=\"keywords\" content={keywords.join(`, `)}/>\r\n            )}\r\n          </Helmet>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nexport default SEO\r\n\r\nconst query = graphql`\r\n  query SEO {\r\n    site {\r\n      siteMetadata {\r\n         title,\r\n         author,\r\n         siteUrl,\r\n\r\n         social{\r\n          twitter\r\n         }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  pathname: PropTypes.string,\r\n  article: PropTypes.bool,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  pathname: null,\r\n  article: false,\r\n}"],"sourceRoot":""}