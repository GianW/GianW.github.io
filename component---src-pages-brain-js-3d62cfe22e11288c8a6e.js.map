{"version":3,"sources":["webpack:///./src/components/brainGrid.js","webpack:///./src/pages/brain.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["BrainGrid","render","data","this","props","brains","imgs","react_default","a","createElement","className","map","_ref","node","title","frontmatter","fields","slug","gatsby_browser_entry","style","textDecoration","to","key","img","name","src","publicURL","alt","id","React","Component","Brain","allMarkdownRemark","edges","allFile","layout","brainGrid","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","menuLinks","site","siteMetadata","padding","margin","float","color","type","menu","link","header","header_Header","_3401424843","Layout","Helmet"],"mappings":"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","file":"component---src-pages-brain-js-3d62cfe22e11288c8a6e.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nclass BrainGrid extends React.Component {\r\n    render() {\r\n        const data = this.props\r\n        const brains = data.brains\r\n        const imgs = data.imgs\r\n\r\n        return(\r\n            <div className=\"cardGrid\">\r\n\r\n                 {brains.map(({node}) => {\r\n                    const title = node.frontmatter.title || node.fields.slug;\r\n\r\n                    return(\r\n                        <Link style={{ textDecoration: `none` }} to={node.fields.slug} className=\"brainCard\" key={title}>\r\n                            <div>\r\n                                <h3 className=\"cardBrainTitle\">{title}</h3>\r\n                                <p className=\"cardBrainImg\">\r\n                                {imgs.map(img => {\r\n                                    if (img.node.name === title) {\r\n                                        return(<img src={img.node.publicURL} alt={title} key={img.node.id} />)\r\n                                    }\r\n                                })}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default BrainGrid;","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport './main.css';\r\n\r\nimport Layout from \"../components/layout\"\r\nimport BrainsGrid from \"../components/brainGrid\"\r\n\r\nclass Brain extends React.Component {\r\n    render() {\r\n\r\n        const { data } = this.props\r\n        const brains = data.allMarkdownRemark.edges\r\n        const imgs = data.allFile.edges\r\n\r\n        return (\r\n            <Layout>\r\n                <BrainsGrid brains={brains} imgs={imgs} />\r\n            </Layout>\r\n\r\n        )\r\n     }\r\n}\r\n\r\n\r\nexport default Brain\r\n\r\n\r\nexport const pageQuery = graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n            }\r\n        }\r\n        allFile(filter: {extension: {eq: \"png\"}}) {\r\n          edges {\r\n            node {\r\n              id,\r\n              publicURL\r\n              name\r\n            }\r\n          }\r\n        }\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            filter:  { fileAbsolutePath: { glob: \"**/brain/**/*.md\" } }\r\n            ) {\r\n            edges{\r\n                node{\r\n                    excerpt\r\n                    fields {\r\n                        slug\r\n                    }\r\n                     frontmatter {\r\n                        title\r\n                        description\r\n                        date(formatString: \"MMMM DD, YYYY\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport {  StaticQuery, graphql } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n  render() {\r\n    const { data } = this.props\r\n    const menuLinks = data.site.siteMetadata.menuLinks\r\n\r\n    return (\r\n      <header>\r\n        <div\r\n          style={{\r\n            // margin: `0 auto`,\r\n            //maxWidth: 1200,\r\n            padding: `1.0rem 1.0875rem`,\r\n          }}\r\n        >\r\n          <h2 style={{ margin: 0, float: `right` }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{color: `white`, textDecoration: `none`}}\r\n            >\r\n              Gian Winckler\r\n            </Link>\r\n          </h2>\r\n          <div id=\"menuToggle\">\r\n            <input type=\"checkbox\" />\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n\r\n            <ul id=\"menu\">\r\n              {menuLinks.map(menu => {\r\n                return (<Link key={menu.name} to={menu.link}><li> {menu.name}</li></Link>)\r\n              })}\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\n// export default Header\r\n\r\n// <Link to=\"/\"><li>Home</li></Link>\r\n// <a href=\"/\"><li>About</li></a>\r\n// <a href=\"/\"><li>Info</li></a>\r\n// <a href=\"/\"><li>Contact</li></a>\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            menuLinks {\r\n              name\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Header data={data} {...props} />}\r\n  />\r\n)\r\n\r\n","import React from \"react\"\r\nimport Header from \"./header\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nconst Layout = ({ children }) => (\r\n    <div>\r\n        <Helmet>\r\n            <title>Gian Winckler</title>\r\n        </Helmet>\r\n        <Header/>\r\n        <main>{children}</main>\r\n    </div>\r\n)\r\n\r\n\r\nexport default Layout"],"sourceRoot":""}