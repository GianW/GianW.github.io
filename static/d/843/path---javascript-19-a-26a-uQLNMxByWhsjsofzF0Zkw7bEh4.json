{"data":{"site":{"siteMetadata":{"title":"gianw.github.io","author":"Gian Winckler"}},"markdownRemark":{"fields":{"slug":"/javascript/"},"id":"c9dd6030-59e1-59e5-b1af-9eba2e925f7c","excerpt":"Table of Contents Escopo de variaveis Clousures Let Const Destructuring Object Literal Spread … Rest … Funções Function expression Funções anonimas Expressão de…","html":"<h2>Table of Contents</h2>\n<ul>\n<li>\n<p><a href=\"#escopo-de-variaveis\">Escopo de variaveis</a></p>\n<ul>\n<li><a href=\"#clousures\">Clousures</a></li>\n<li><a href=\"#let---es06\">Let</a></li>\n<li><a href=\"#const---es06\">Const</a></li>\n<li><a href=\"#destructuring\">Destructuring</a></li>\n<li><a href=\"#object-literal\">Object Literal</a></li>\n<li><a href=\"#spread-\">Spread …</a></li>\n<li><a href=\"#rest-\">Rest …</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#fun%C3%A7%C3%B5es\">Funções</a></p>\n<ul>\n<li><a href=\"#function-expression\">Function expression</a></li>\n<li><a href=\"#fun%C3%A7%C3%B5es-anonimas\">Funções anonimas</a></li>\n<li><a href=\"#express%C3%A3o-de-fun%C3%A7%C3%A3o-nomeada\">Expressão de função nomeada</a></li>\n<li><a href=\"#iife---immediately-invoked-function-expression\">IIFE - Immediately Invoked Function Expression</a></li>\n<li><a href=\"#callback\">Callback</a></li>\n<li><a href=\"#bind\">Bind</a></li>\n<li><a href=\"#call\">Call</a></li>\n<li><a href=\"#apply\">Apply</a></li>\n<li><a href=\"#promises\">Promises</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#arrays\">Arrays</a></p>\n<ul>\n<li><a href=\"#opera%C3%A7%C3%B5es\">Operações</a></li>\n<li><a href=\"#map\">Map</a></li>\n<li><a href=\"#reduce\">Reduce</a></li>\n<li><a href=\"#filter\">Filter</a></li>\n<li><a href=\"#concat\">Concat</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#string\">String</a></p>\n<ul>\n<li><a href=\"#template\">Template</a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"escopo-de-variaveis\"></a></p>\n<h2>Escopo de variaveis</h2>\n<p>Existem dois tipos de escopo para variaveis, Globais ou de Função.</p>\n<p>Escopo global:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*Gian*/</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Escopo de função</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*Gian*/</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*undefined*/</span></code></pre></div>\n<p>Isso acontece pelo Hoisting de variaveis, antes da execução do código as variaveis são processadas e toda declaração de variavel é móvida para o inicio do escopo (Função ou Global) isso acontece também com as variaveis que são utilizadas sem declaração.</p>\n<p>Código exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsobrenome <span class=\"token operator\">=</span> <span class=\"token string\">\"Winckler\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Este código será processado da seguinte maneira:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/*var sobrenome;*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*var nome;*/</span>\n    nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsobrenome <span class=\"token operator\">=</span> <span class=\"token string\">\"Winckler\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a name=\"clousures\"></a></p>\n<h3>Clousures</h3>\n<p>Uma função que faça referencia a uma variavel que não está no seu escopo e não foi passada como argumento, todas as funções “filhas” da função que possui o escopo da variável, acessam está variável.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">imprimeMesmo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Giiiian\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Escopo imprimeMesmo(): \"</span> <span class=\"token operator\">+</span> nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*Giiiian*/</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">imprimeMesmo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Escopo imprime(): \"</span> <span class=\"token operator\">+</span> nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*Giiiian*/</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Escopo Global: \"</span> <span class=\"token operator\">+</span> nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*undefined*/</span></code></pre></div>\n<p><a name=\"let\"></a></p>\n<h3>Let</h3>\n<p>Entre as novas funcionalidades acrescidas pela versão 6 do EcmaScript, está o <code class=\"language-text\">let</code> que cria um escopo por bloco, a execução do hoisting é modificada e ele move a declaração da variavel para o inicio do bloco e não do escopo.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nome <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> sobrenome <span class=\"token operator\">=</span> <span class=\"token string\">\"Winckler\"</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sobrenome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*Winckler*/</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sobrenome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*sobrenome is not defined*/</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">imprime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>O <code class=\"language-text\">use strict</code> foi incluido para usar o <code class=\"language-text\">let</code> da mesma forma que seria nescessario para todas novas funcionalidades do ES06, neste exemplo usamos o <code class=\"language-text\">if</code> mas poderia ser em <code class=\"language-text\">for</code>, <code class=\"language-text\">switch</code>, <code class=\"language-text\">case</code> e assim por diante.\n<a name=\"const\"></a></p>\n<h3>Const - ES06</h3>\n<p>Diferente das declarações anteriores e como o nome sugere, <code class=\"language-text\">Const</code> é a declaração de um valor apenas para leitura dentro do seu escopo.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">constante</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token string\">'use strict'</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">VALOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ES05\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">VALOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ES06\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//TypeError</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Observações: a constante vale apenas no escopo da função <code class=\"language-text\">constante</code>, a referencia de uma constante não pode ser alterado, mas, o valor poderia ser modificado, se feito dessa maneira:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">constante</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token string\">'use strict'</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">VALOR</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>atual<span class=\"token punctuation\">:</span> <span class=\"token string\">'ES05'</span><span class=\"token punctuation\">}</span>\n<span class=\"token constant\">VALOR</span><span class=\"token punctuation\">.</span>atual <span class=\"token operator\">=</span> <span class=\"token string\">\"ES06\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a name=\"destructuring\"></a></p>\n<h3>Destructuring</h3>\n<p>Extrair dados de arrays e objetos direto para variaveis.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//array</span>\n<span class=\"token keyword\">let</span> lista <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> lista<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Também é possível pular uma posição</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> lista <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> lista<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>  c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Destruturando objetos:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> pessoa <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>nome<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">,</span> idade<span class=\"token punctuation\">:</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gianbwinckler\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>nome<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> pessoa<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Repare que chave ou conchete é o que identifica o tipo de objeto a ser desestruturado.</p>\n<p><a name=\"object-literal\"></a></p>\n<h3>Object Literal</h3>\n<p>Criar objetos atribuindo variaveis, nome da variaveel vira atributo e permance com o valor:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> idade <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> bejeto <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>nome<span class=\"token punctuation\">,</span> idade<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bejeto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//{nome: \"Gian\", idade: 28}</span></code></pre></div>\n<p>Abreviação de nome de métodos</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> bejeto <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tnome<span class=\"token punctuation\">,</span>\n\tidade<span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">exibe</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">,</span> idade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>pode ser substituido por:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> bejeto <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tnome<span class=\"token punctuation\">,</span>\n\tidade<span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">exibe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nome<span class=\"token punctuation\">,</span> idade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a name=\"spread\"></a></p>\n<h3>Spread …</h3>\n<p>Separa objetos em multiplos elementos, exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">exibe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> lista <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">exibe</span><span class=\"token punctuation\">(</span>lista<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//(2) [1, 2]</span>\n<span class=\"token function\">exibe</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>lista<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//1 2</span></code></pre></div>\n<p>Na primeira chamada ele enviou o array inteiro, na segunda “quebrou” as posições do array em valores separados</p>\n<h3>Rest …</h3>\n<p>Reune varios elementos em um array, exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">teste</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>itens</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> itens<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">teste</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//1 [2, 3, 4, 5, 6, 7]</span></code></pre></div>\n<p><a name=\"funcoes\"></a></p>\n<h2>Funções</h2>\n<p><a name=\"function-expression\"></a></p>\n<h3>Function expression</h3>\n<p>Qunado uma função é atribuida a uma variavel</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">ola</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Olá\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">ola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">buenas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Buenas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> hello <span class=\"token operator\">=</span> buenas<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>É importante observar o hoisting para este tipo de declaração, observe o exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">ola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Olá</span>\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Uncaught TypeError: hello is not a function</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Olá\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Isso acontece pois o hoisting sobe a declaração da variavel e não o seu conteudo.</p>\n<p>O uso da function expression “protege” o escopo das variaveis internas, como foi dito em <a href=\"#clousures\">Clousures</a>.\nPara exemplificar, sempre que chamamos uma função na forma tradicional <code class=\"language-text\">somar()</code> todo escopo de variaveis internas é reiniciado:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tipoErro</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> qtdErro <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tqtdErro <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Erro: \"</span> <span class=\"token operator\">+</span> tipoErro <span class=\"token operator\">+</span> <span class=\"token string\">\" Quantidade: \"</span> <span class=\"token operator\">+</span> qtdErro<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Valor inválido!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Qtd 1</span>\n<span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Valor inválido!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Qtd 1</span></code></pre></div>\n<p>Usando function expression ficaria dessa forma:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tipoErro</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> qtdErro <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tqtdErro <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Erro: \"</span> <span class=\"token operator\">+</span> tipoErro <span class=\"token operator\">+</span> <span class=\"token string\">\" Quantidade: \"</span> <span class=\"token operator\">+</span> qtdErro<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> errValorInvalido <span class=\"token operator\">=</span> <span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Valor inválido!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> errPreenchaNome <span class=\"token operator\">=</span> <span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Você deve preencher o campo nome.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">errValorInvalido</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// qtd 1</span>\n<span class=\"token function\">errValorInvalido</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// qtd 2</span>\n\n<span class=\"token function\">errPreenchaNome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//qtd 1</span>\n<span class=\"token function\">errPreenchaNome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//qtd 2</span></code></pre></div>\n<p>Mesmo com esse tipo de atribuição é possível passar valores por paramêtro em cada chamada, ex:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tipoErro</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> qtdErro <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">campo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tqtdErro <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Erro: \"</span> <span class=\"token operator\">+</span> tipoErro <span class=\"token operator\">+</span> <span class=\"token string\">\", Campo: \"</span> <span class=\"token operator\">+</span> campo <span class=\"token operator\">+</span> <span class=\"token string\">\" Quantidade: \"</span> <span class=\"token operator\">+</span> qtdErro<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> errValorInvalido <span class=\"token operator\">=</span> <span class=\"token function\">alertaErro</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Valor inválido!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">errValorInvalido</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Total\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// qtd 1</span>\n<span class=\"token function\">errValorInvalido</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Frete\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// qtd 2</span></code></pre></div>\n<p><a name=\"funcoes-anonimas\"></a></p>\n<h3>Funções anonimas</h3>\n<p>Na verdade, muitas pessoas chamam de função anonima o que foi explicado anteriormente como function expression, entenda o motivo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">ola</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Olá\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">buenas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Buenas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> hello <span class=\"token operator\">=</span> buenas<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ola<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> ola<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>“Gian, mas eu nunca uso o atributo name de uma função”, Talvez use mas não saiba, por exemplo, a função <code class=\"language-text\">setTimeout</code> recebe como primeiro parametro o nome da função e guarda seu contexto (hoisting), o código abaixo exemplifica:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">tic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fake'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">relogio</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">function</span> <span class=\"token function\">tic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>tic<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">relogio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">tic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a name=\"expressao-nomeada\"></a></p>\n<h3>Expressão de função nomeada</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> math <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'diminui'</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">diminui</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'soma'</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">soma</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nmath<span class=\"token punctuation\">.</span><span class=\"token function\">diminui</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmath<span class=\"token punctuation\">.</span><span class=\"token function\">soma</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a name=\"arrow-functions\"></a></p>\n<h3>Arrow Functions</h3>\n<p><a name=\"iife\"></a></p>\n<h3>IIFE - Immediately Invoked Function Expression</h3>\n<p>São funções atribuidas em expreções <code class=\"language-text\">()</code> e exceturadas logo após sua definição</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Oi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Existem diversos usos para este tipo de função, exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> produtos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> lista <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">{</span>\n   <span class=\"token function-variable function\">add</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     lista<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token function-variable function\">show</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>lista<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camisa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"calça\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dessa forma a lista fica acessivel apenas dentro de produtos, “encapisulados” pelo escopo são acessiveis apenas pelos metodos expostos. Obs. Isso também é conhecido como module pattern</p>\n<p>Também é possivel usar uma IIFE para identificar o contexto de uso de uma função de modo que se possa usar tanto no browser como no servidor.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  context<span class=\"token punctuation\">.</span>hello <span class=\"token operator\">=</span> hello<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>module <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> module<span class=\"token punctuation\">.</span>exports <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Essa função pode ser usada:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> hello <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hello<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>e também no navegador</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hello.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><a name=\"callback\"></a></p>\n<h3>Callback</h3>\n<hr>\n<p><a name=\"bind\"></a></p>\n<h3>Bind</h3>\n<hr>\n<p><a name=\"call\"></a></p>\n<h3>Call</h3>\n<hr>\n<p><a name=\"apply\"></a></p>\n<h3>Apply</h3>\n<hr>\n<h3>Promises</h3>\n<p><a name=\"promises\"></a></p>\n<hr>\n<p><a name=\"arrays\"></a></p>\n<h2>arrays</h2>\n<h3>Operações</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> produtos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'camisa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'calça'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>produtos<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>produtos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//camisa</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>produtos<span class=\"token punctuation\">[</span>produtos<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>produtos<span class=\"token punctuation\">[</span>produtos<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// calça</span>\n\n<span class=\"token comment\">// percorre todos registros do array.</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Inclui item no fim da lista (retorna int da ultima posição do array)</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meia'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n\n<span class=\"token comment\">//Remove item do fim da lista (retorna item removido)</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// meia</span>\n\n<span class=\"token comment\">// Remove item do inicio da lista (retorna item removido)</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//\"camisa\"</span>\n\n<span class=\"token comment\">//Incluir item no inicio da lista (retorna tamanho da lista)</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camisa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2</span>\n\n<span class=\"token comment\">// Procura a posição de um item dentro do array</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"calça\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n<span class=\"token comment\">// Remove itens por posição ==revisar==</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Cria uma cópia do array</span>\n<span class=\"token keyword\">var</span> produtosDois <span class=\"token operator\">=</span> produtos<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Observe que é diferente de var produtosDois = produtos; que apenas aponta para o mesmo array</span>\n\n<span class=\"token comment\">//Ordernar elementos do array</span>\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Map</h3>\n<p><a name=\"map\"></a>\nAtua/percorre uma lista e executa uma function em cada unidade dessa lista, exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">exibeRegistro</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nprodutos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">exibeRegistro</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//também é possivel atribuir os valores modificados a um novo array</span>\n<span class=\"token keyword\">var</span> novaLista <span class=\"token operator\">=</span> produtos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> obj <span class=\"token operator\">+</span> <span class=\"token string\">\"_1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Reduce</h3>\n<p><a name=\"reduce\"></a></p>\n<h3>Filter</h3>\n<p><a name=\"filter\"></a></p>\n<h3>Concat</h3>\n<h2>String</h2>\n<h3>Template</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> cidade <span class=\"token operator\">=</span> <span class=\"token string\">\"Porto Alegre\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> mensagem <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`Este texto está sendo editado por </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nome<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> na cidade de </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cidade<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mensagem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Este texto está sendo editado por Gian na cidade de Porto Alegre</span></code></pre></div>\n<p>Quebras de linha também são reconhecidas:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">\"Gian\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> cidade <span class=\"token operator\">=</span> <span class=\"token string\">\"Porto Alegre\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> mensagem <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`Este texto está sendo editado por </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nome<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\nna cidade de </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cidade<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mensagem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Este texto está sendo editado por Gian</span>\n<span class=\"token comment\">//na cidade de Porto Alegre</span></code></pre></div>\n<hr>","frontmatter":{"title":"javascript","date":null,"tags":[],"seo":["javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/","previous":{"fields":{"slug":"/building-components-with-storybook/"},"frontmatter":{"title":"Building components with StoryBook","type":null,"tags":["React","Javascript"]}},"next":{"fields":{"slug":"/docker/"},"frontmatter":{"title":"docker","type":"brain","tags":[]}}}}